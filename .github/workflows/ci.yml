name: CI
on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

jobs:
  build-gradle:
    name: Build
    # Run on external PRs, but not on internal PRs since those will be run by push to branch
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on:  ubuntu-latest
    outputs:
      gradle-code-version: ${{ steps.extract.outputs.GRADLE_CODE_VERSION }}
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Gradle Wrapper
        uses: gradle/gradle-build-action@v2.9.0
        with:
          gradle-version: wrapper
          arguments: build --full-stacktrace
        env:
          CI: true
      - id: extract
        name: Extract
        run: echo "GRADLE_CODE_VERSION=$(awk -F= '$1~/version/{print $2}' gradle.properties)" >> $GITHUB_OUTPUT
      - name: Debug
        run: echo ${{ steps.extract.outputs.GRADLE_CODE_VERSION }}

  publish-to-sonatype-snapshot:
    name: Publish to sonatype.org (SNAPSHOT)
    needs: [ build-gradle ]
    if: github.event_name != 'pull_request' && endsWith(needs.build-gradle.outputs.gradle-code-version, '-SNAPSHOT') && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/feature')) &&  github.repository_owner == 'routis'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Publish with Gradle Wrapper
        uses: gradle/gradle-build-action@v2.9.0
        with:
          arguments: publishAllPublicationsToMavenCentral --no-configuration-cache
        env:
          CI: true
          GIT_REF_NAME: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.OSSRH_GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
